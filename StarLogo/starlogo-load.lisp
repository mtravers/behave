(in-package :cl-user)(load (mt::rel-pathname "starlogo-file-set.lisp" '("StarLogo 2.0.2 Source 7/22/97")))(unintern 'mt::make-bitmap :mt)         ; sigh;(unintern 'old-compare::line :old-compare)(require :quickdraw)(require :icon-dialog-item)(require :new-file-dialogs)(load "ccl:library;new-file-dialogs.lisp")(load-if-newer "starlogo")(unadvise load)(push  #'(lambda ()     (ignore-errors      (redefine-logical-host       "ccl"       `("Lisp" ,(concatenate 'string "MCL " (ccl::lisp-implementation-short-version)))))) *lisp-startup-functions*)(at-listener-level;  (load "snip:snip-dev-settings")  (in-package "CL-USER"))#|(defun save-app ()  (push    #'(lambda ()       (redefine-logical-host        "ccl"        `("Lisp" ,(concatenate 'string "MCL " (ccl::lisp-implementation-short-version)))))   *lisp-startup-functions*)  (save-application "snip:web-digest.app"))|#; (cl-user::init);;; save a lisp with starlogo in it.(defun save-mcl-starlogo ()  (setf standalone? t)  (push 'cl-user::init *lisp-startup-functions*)  (save-application "starlogo:mcl-starlogo.app"                    :size (* 20 1024 1024)                    :resources (ccl::get-app-resources "starlogo:resources" ccl::*ccl-file-creator*)))                  