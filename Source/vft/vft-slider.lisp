(in-package :beh) ;;; additions to slider for vft(defclass vft-slider-block (slider-block)  ((token :initform nil)))(defmethod* initialize-instance :after ((b vft-slider-block) &rest ignore)  (vft-command 'NewScalar                #'(lambda (result)                   (print b)                   (setf token result)                   (block-changed b)         ; we are now compilable                   (value-changed b))));;; remove register-variable(defmethod* value-changed :after ((b vft-slider-block))  (when token    (let ((new-v (slider-value slider-view)))      (remove-vft-commands #'(lambda (command)                               (and (eq (first command) 'SetScalar)                                    (eq (second command) token))))      (vft-command `(SetScalar ,token ,new-v)))))(defform (slider number :block-class vft-slider-block) (raw)  `(ScalarToken ,raw))(defmethod* generate-code ((block vft-slider-block))  (unless token (error "slider token not defined yet"))  `(slider ,token)) 