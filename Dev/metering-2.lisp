(monitor:monitor-all :beh)(monitor:unmonitor);;; must do this to make click handling system work, sigh(do-symbols (s :beh)    (when (search "CLICK" (symbol-name s))      (print s)      (monitor::monitoring-unencapsulate s)))(monitor:reset-all-monitoring);;; do something(monitor:report-monitoring :all :exclusive 0.01 :percent-time);;; just dragging and dropping                                                 Cons                   %     %                       Per      Total   TotalFunction           Time  Cons  Calls  Sec/Call   Call     Time    Cons------------------------------------------------------------------------drag-and-drop:     0.65  0.28      9  0.874091  16981  7.866816  152832beveled-frame:     0.08  0.58   2028  0.000485    153  0.983629  311296raw-set-font:      0.04  0.05   1094  0.000480     24  0.524682   26256flat-rect:         0.04  0.00   1163  0.000441      0  0.513275       0color+lightness:   0.03  0.00   7896  0.000053      0  0.414922       0draw-pict-natural:  0.03  0.00    170  0.002033      0  0.345532       0handle-or-pass-up:  0.02  0.01     31  0.008109    210  0.251368    6504expand-to-fit:     0.01  0.02    240  0.000721     43  0.173104   10240beveled-rect:      0.01  0.00   1163  0.000146      0  0.170275       0------------------------------------------------------------------------TOTAL:             0.94  0.94  13794                   11.243602  507128Estimated monitoring overhead: 0.28 secondsEstimated total monitoring overhead: 0.34 secondsOne hundred nineteen monitored functions were not called. See the variable mon::*no-calls* for a list.? (defmethod drag-and-drop ((v drag-and-drop-mixin) &optional (where #@(0 0)))  (raise v)  (with-cursor *dragging-cursor*    (warp-mouse (subtract-points (raw-mouse) *shadow-offset*))    (with-mouse-dragging (mouse-pos v)      (set-view-position v (point-max (subtract-points mouse-pos where) #@(0 0)))            ; max might want to be argument      (shadow-view *shadow-view* v)      (highlight-view (drop-target v))))  (unshadow-view *shadow-view*)  (highlight-view nil)  (set-view-position v (add-points (view-position v) *shadow-offset*))  (warp-mouse (add-points (raw-mouse) *shadow-offset*))  (drop v))