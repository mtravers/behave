(in-package :beh);;; Commands for layout experiments; (defclass proto-block (ccl::a-view drag-mixin) ());;; for editing layouts(defclass block-text-subview (layout-block drag-mixin expand-container-mixin gesture-handling-mixin text-view) ()  (:default-initargs     :view-font *default-block-font*));;; box text-views so we can see what's going on(defmethod view-draw-contents :after ((view block-text-subview))  (with-rect (r 0 (view-size view))    (#_FrameRect r)))(defmethod* command-click ((v block-text-subview) ignore)  (at-listener-level    (setf text (get-string-from-user "New string"))    (invalidate-view v)))(defmethod* clone-block ((block block-text-subview))  (make-instance (class-of block)    :view-container view-container    :view-position view-position    :view-size view-size    :text text))(defmethod command-control-shift-click ((block block-text-subview) ignore)  (let ((new-block (clone-block block)))    (drag-and-drop new-block)))(defmethod can-drop? ((dragged block-text-subview) (target t))  t)(defmethod* command-shift-click ((v basic-block) ignore)  (setf color (user-pick-color :color color))  (invalidate-view v))  