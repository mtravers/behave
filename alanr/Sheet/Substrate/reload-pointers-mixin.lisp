;-*- Mode: Lisp; Package: CCL -*-(in-package :ccl);; ****************************************************************;; mixin to restore pointers on startup;; pointer-save-world is called on each instance before the lisp shuts down.;; initialize-pointer is called on startup.;; bugs: the all-of-them slot should be weak.(defclass reload-pointers-mixin ()  ((all-of-them :allocation :class :accessor all-of-them :initform nil)))(defmethod initialize-instance :after ((i reload-pointers-mixin) &key)  (push (cons i (initialize-pointers i)) (all-of-them i)))(defmethod initialize-pointers ((i reload-pointers-mixin))  (error "You need to define this yourself!"))(defmethod pointers-save-world ((i reload-pointers-mixin)) nil)  (defun before-saveworld-reloadable-pointers ()  (let* ((prototype (class-prototype (find-class 'reload-pointers-mixin)))         (all (nreverse (mapcar #'car (all-of-them prototype)))))       ;mt added car    (loop for instance in all           do           (pointers-save-world instance)          )))(def-load-pointers fix-up-reloadale-pointers ()  (let* ((prototype (class-prototype (find-class 'reload-pointers-mixin)))         (all (nreverse (mapcar #'car (all-of-them prototype)))))    (setf (all-of-them prototype) nil)    (loop for instance in all           do           (initialize-pointers instance)           (push instance (all-of-them prototype)))))(pushnew 'before-saveworld-reloadable-pointers *save-exit-functions*)