;; ****************************************************************;;;; Author: Alan Ruttenberg, Interval Research;; email:  alanr@media.mit.edu;;;; Tuesday August 29,1995 alanr: Now each of those slots can be a list.;; Thursday August 24,1995 alanr. Changed so that the-icons is  a list of slots.;; Created: Wednesday August 16,1995;; ;; ****************************************************************(in-package :ccl)(defclass compound-icon-button (cicon-button)  ;; list of slots  ((the-icons :initarg :the-icons :initform nil :accessor the-icons)))(defmethod view-draw-contents ((button compound-icon-button))  (call-next-method)  (let ((where (rect (icon-size button))))    (#_offsetrect where (extra-left-margin button) (extra-top-margin button))    (loop for icon-accessor in (the-icons button)          for icon = (funcall icon-accessor button)          when icon do (if (listp icon)                         (dolist (el icon) (#_plotcicon where el))                         (#_plotcicon where icon)))))(defmethod initialize-instance ((v compound-icon-button) &key the-icons)  (let ((some-icon (funcall (car the-icons) v)))    (when (consp some-icon) (setf some-icon (car some-icon)))    (setf (cicn v) some-icon) ;; fool the base method    (call-next-method)    (loop for icon-accessor in the-icons        for icon-def = (funcall icon-accessor v)        do (funcall (setf-method icon-accessor)                    (if (stringp icon-def)                       (cicn-named icon-def)                      icon-def)                    v)        (when icon-def          (if (listp icon-def)            (dolist (el icon-def) (kludge-initialize-icon el))            (kludge-initialize-icon icon-def)))))) (defmethod icons-changed ((b compound-icon-button))  (loop for icon-accessor in (the-icons b)        for icon-def = (funcall icon-accessor b)        until icon-def        finally (setf (cicn b) (if (listp icon-def) (car icon-def) icon-def)))  (invalidate-view b t))'(defmethod mask-region ((b compound-icon-button) &optional (rgn (%new-rgn)))  (with-temp-gworld ((@h (view-size b)) (@v (view-size b)) 1 gw)    (with-focused-gworld (gw)      (#_eraserect (rect (size gw)))      (with-pixmap (mpm gw)        (loop for icon-accessor in (the-icons b)              for icon = (funcall icon-accessor b)              do              (loop for iconi in (if (listp icon) icon (list icon))                    do                    (kludge-initialize-icon iconi)                    (let ((rect (rect 0)))                      (icon-rect b rect)                      (with-pointers ((iconptr iconi))                        (#_copybits (pref iconptr :cicon.iconmask) mpm                         rect rect #$srcor (%null-ptr))))))        (#_bitmaptoregion rgn mpm))))  rgn)   ;; 1/19/96 Kotik: moved create-drag-item-bounds into it's own file called create-drag-item-bounds.lisp;; because it causes system build problems if it's in utility file set (because utility file;; set files are compiled before rest of MediaCalc is loaded).                