;; ****************************************************************;;;; Author: Alan Ruttenberg, MIT Media Lab;; email:  alanr@media.mit.edu;;;; Views with margins. Assumption is that the inside of the margins is where the;; content is drawn. ;; Created: Monday October 7,1996;; ;; ****************************************************************(in-package :ccl)(defclass margin-mixin ()  ((top-margin :initarg :top-margin :initform 0 :accessor top-margin)   (left-margin :initarg :left-margin :initform 0 :accessor left-margin)   (right-margin :initarg :right-margin :initform 0 :accessor right-margin)   (bottom-margin :initarg :bottom-margin :initform 0 :accessor bottom-margin)))(defmethod view-size-inside-margins ((view margin-mixin))  (@! (- (@h (view-size view)) (right-margin view) (left-margin view))      (- (@v (view-size view)) (top-margin view) (bottom-margin view))))(defmacro with-focused-view-inside-margins (view &body body)  `(flet ((with-focused-view-inside-margins-body ()            ,@body))     (declare (dynamic-extent #'with-focused-view-inside-margins-body))     (call-with-focused-view-inside-margins ,view #'with-focused-view-inside-margins-body)))(defun call-with-focused-view-inside-margins (view function)  (let* ((view-origin (view-origin view))         (size (view-size view))         (origin-h (@h view-origin))         (origin-v (@v view-origin)))    (assert (typep view 'margin-mixin) () "can't focus inside margin since ~a isn't subclass of margin-mixin")    (with-accessor-values (left-margin top-margin right-margin bottom-margin) view      (let ((inner-region (rect-region                            0 0                            (- (@v size) top-margin bottom-margin)                           (- (@h size) left-margin right-margin))))                (with-focused-view view          (#_setclip inner-region)          (#_setorigin (- origin-h left-margin) (- origin-v top-margin))          (funcall function)          (#_setclip (view-clip-region view))          (#_setorigin origin-h origin-v)          (#_disposergn inner-region))))))(defmacro with-focused-view-outside-margins (view &body body)  `(flet ((with-focused-view-outside-margins-body ()            ,@body))     (declare (dynamic-extent #'with-focused-view-outside-margins-body))     (call-with-focused-view-outside-margins ,view #'with-focused-view-outside-margins-body)))(defun call-with-focused-view-outside-margins (view function)  (let* ()    (assert (typep view 'margin-mixin) () "can't focus inside margin since ~a isn't subclass of margin-mixin")    (with-accessor-values (left-margin top-margin right-margin bottom-margin) view      (let ((inner-region (rect-region                            top-margin left-margin                            (- (@v (view-size view)) bottom-margin)                           (- (@h (view-size view)) right-margin))))        (with-focused-view view          (#_diffrgn (view-clip-region view) inner-region inner-region)          (#_setclip inner-region)          (funcall function))        (#_setclip (view-clip-region view))        (#_disposergn inner-region)))))(defun mouse-coordinates-inside-margins (view point)  (@- point (@! (left-margin view) (top-margin view))))  