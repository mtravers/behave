(defclass check-box (proto-block gesture-handling-mixin)  ((checked? :initform nil :initarg :checked?)   (action :initform nil :initarg :action))  (:default-initargs :view-size #@(12 12)));;; +++ has some off-by-ones(defmethod* view-draw-contents ((v check-box))  (let ((right (point-h (view-size v)))        (bottom (point-v (view-size v))))    (with-fore-color *black-color*      (with-rect (r 0 0 right bottom);        (#_PenSize (1+ (floor right 10)) (1+ (floor bottom 10)))        (#_EraseRect r)        (#_FrameRect r)        (when checked?          (#_MoveTo 0 0)          (#_LineTo right bottom)          (#_MoveTo right 0)          (#_LineTo 0 bottom))))))  #|(defmethod* view-click-event-handler ((v check-box) where)  (declare (ignore where))  (if (any-modifier-keys-p)    (call-next-method)    (progn      (setf checked? (not checked?))      (when action (funcall action v checked?))      (invalidate-view v t))))|#(defmethod* click ((v check-box) where)  (declare (ignore where))  (setf checked? (not checked?))  (when action (funcall action v checked?))  (invalidate-view v t))#|(defclass my-check-box (check-box drag-mixin drag-and-drop-mixin expand-container-mixin)  ())|#(defmethod view-cursor ((v check-box) point)  (declare (ignore point))  *arrow-cursor*)