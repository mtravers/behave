;;; Some stabs at layout;;; Arrange subviews in a row, aligned by centers(defmethod build-row ((container view) views top left spacing)  (let ((max-height (maximize views                              :key #'(lambda (v) (point-v (view-size v)))                              :return-max t))        (x left))    (dolist (v views)      (set-view-position v (make-point x (+ top                                            (round (- max-height (point-v (view-size v)))                                                   2))))      (incf x (+ (point-h (view-size v)) spacing)))    (values max-height)));;; test, arrange all subviews in a row by natural order(defun build-a-row (v)  (build-row v (coerce (view-subviews v) 'list) 10 10 10)  (shrink-wrap v 10))(defmethod shrink-wrap ((v view) border)  (let ((svs (coerce (view-subviews v) 'list)))    (set-view-size      v     (if svs       (add-points (bounding-size (coerce (view-subviews v) 'list))                   (make-point border border))       (view-default-size v)))))(defmethod build-rows-recursive ((v view))  (dolist (sv (coerce (view-subviews v) 'list))    (build-rows-recursive sv))  (build-a-row v))                           #|  (dosequence (sv (view-subviews *win*))  (build-rows-recursive sv))  (cleanup-all *win*)|#