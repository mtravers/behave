#|;;; Alternate startup package to deal with MCL 3.0 bugs10/24/95 18:14  first version1/24/97 0:39  added now-and-on-startuperror handling in startup appears not to work in MCL3 -- warning message does not appear?1/30/97 15:11  you know, this does exactly what def-load-pointers does, so whydo I need it?|#(in-package :cl-user);;; Startup functions(defvar *startups* nil)(defstruct startup thunk name)(defun add-startup (thunk &key                          (where :end)                          (name (if (symbolp thunk)                                  thunk                                  (or (function-name thunk)                                      (gensym "STARTUP")))))  (mt:awhen (and name (find name *startups* :key #'startup-name))    (warn "Replacing old startup ~A" mt:it)    (mt:deletef mt:it *startups*))  (let ((startup (make-startup :thunk thunk :name name)))    (case where      (:end (mt:push-end startup *startups*))      (:front (push startup *startups*))      (t (error "~A not one of :front or :end" where)))))(defmacro now-and-on-startup ((name) &body body)  (unless body (error "you probably forgot the name"))  `(let ((thunk #'(lambda () ,@body)))     (add-startup thunk :name ',name)     (funcall thunk)))(defmacro on-startup ((name) &body body)  (unless body (error "you probably forgot the name"))  `(let ((thunk #'(lambda () ,@body)))     (add-startup thunk :name ',name)))(defun remove-startup (name)  (mt:deletef name *startups* :Key #'startup-name));;; convert older startups to new form(defun transfer-startups ()  (dolist (s *lisp-startup-functions*)    (add-startup s))  (setf *lisp-startup-functions* nil))(defun startup ()  (format t "~%Starting up...")  (dolist (s *startups* (format t "Done"))    (format t "~A..." (startup-name s))    (handler-case (funcall (startup-thunk s))      (error (condition)        (let ((s s))                    ; preserve s value         (mt:at-listener-level            (warn "Startup function ~A aborted due to error: ~A"                 (startup-name s)                 (with-output-to-string (stream)                                       (ccl::report-condition condition stream)))))))))(pushnew 'startup *lisp-startup-functions*)     ; ??? install 